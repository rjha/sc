
#install old redis server packaged with ubuntu
# to get 
# 1) /etc/init.d script
# 2) /etc/bash_completion.d/redis-cli
# 3) /etc/logrotate.d/redis-server
# or you can copy these files from our deploy/redis/pristine folder.
#
$sudo aptitude install redis-server
This will install the debian redis-server package 

#stop old redis server
$sudo service redis-server stop

# get the latest redis tarball

go to http://redis.io/download
and download the latest redis 2.6 tarball
(At some point we want Lua scripting support so we need 2.6)

#compile latest redis tarball

$ mkdir -p  $HOME/nuke
$ cd $HOME/nuke
$ cp <redis-tarball> $HOME/nuke/.
$ cd $HOME/nuke
$ tar -zxvf <redis-tarball>
This will create a new redis-2.6 directory..
$ cd <redis-2.6 dir> 
$ sudo make
$ sudo make test



verify that all tests pass and that you have 5 binaries in 
$HOME/nuke/<redis-2.6-dir>/src 

redis-cli
redis-server
redis-benchmark
redis-check-aof 
redis-check-dump


# copy compiled binaries to /usr/bin area overwriting the old binaries 
#
$cd $HOME/nuke/<redis-2.6-dir>
sudo cp src/redis-cli /usr/bin/.
sudo cp src/redis-server /usr/bin/.
sudo cp src/redis-benchmark /usr/bin/.
sudo cp src/redis-check-aof /usr/bin/.
sudo cp src/redis-check-dump /usr/bin/.

#strip binaries
sudo  strip --strip-all  /usr/bin/redis-cli 
sudo  strip --strip-all  /usr/bin/redis-server 
sudo  strip --strip-all  /usr/bin/redis-benchmark 
sudo  strip --strip-all  /usr/bin/redis-check-aof 
sudo  strip --strip-all  /usr/bin/redis-check-dump 

# why strip binaries of debug symbols?
The redis makefile supplies -O2 switch but not the -s switch to gcc.
The binaries we compiled also include the debug symbols. To strip the 
binaries of debug symbols, we can do 

$strip --strip-all <binary-name>
should result in a size reduction.




# copy latest redis.conf file

$ sudo cp /etc/redis/redis.conf /etc/redis/redis.conf.orig
$ sudo cp ~/code/github/sc/deploy/redis/redis.conf /etc/redis/.


verify 
- redis bind address
- port 
- rename commands for dangerous commands,  flushall, flushdb and config 
- number of databases
- Max memory size
- backup options


# add following vm param at the end of  /etc/sysctl.conf
#    you may also want to adjust vm.swappiness
vm.overcommit_memory = 1
5) REBOOT
6) After reboot verify that you have redis runnig

$redis-cli
> keys *
> quit

