#ssh
to break an unresponsive ssh session  type ~. (tilde dot)


#gvim
mkdir ~/nuke/swap
cp deploy/apps/vimrc  ~/.vimrc

#jdk1.7

To install jdk1.7 we just untar the tarball and copy it to ~/sw/ 
add to PATH in user .profile (~/.profile) like
PATH=$PATH:$HOME/sw/jdk1.7.0_04/bin

source new profile (. .profile)

#netbeans 

+ download netbeans tarball

#add consolas fonts

mkdir ~/.fonts
copy msfonts to ~/.fonts dir
$fc-cache -fv  (do not run as root)

verify using $fc-list

#netbeans:scanOnDemand plugin

Run the IDE,
go to Tools | Plugins
choose Settings and verify "Latest Development Plugins" update center is there.
if not, add it, the URL is: http://deadlock.netbeans.org/hudson/job/nbms-and-javadoc/lastStableBuild/artifact/nbbuild/nbms/updates.xml.gz

Watch out! From the moment you add it you'll start receiving notifications for yet not stable updates, so you may want to check new updates carefully before installing.

click the "Reload Catalog" button,
    + Netbeans 7.2 : Go to updates tab - click check for updates
    + Go to available plugins tab - search for scan
 
search for "Scan On Demand",
install module.

Now go to installed plugins
Deactivate following plugins
(what is part of Base IDE)
 + git 
 + hudson
 + subversion
 + mercurial
 + bugzilla
 + whatever takes your fancy : the fewer the better


uninstall useless plugins
(Donot remove PHP plugin : All PHP project support is via this plugin)
 - php frameworks
 - whatever takes your fancy



#netbeans: configuration
#

+ make a copy of ~/sw /<netbeans>/etc/netbeans.conf
+ open file ~/sw /<netbeans>/etc/netbeans.conf

+ change java heap size and L&F 

netbeans_default_options="-J-client -J-Xss2m -J-Xms128m -J-Xmx256m -J-XX:PermSize=64m -J-Dsun.java2d.noddraw=true -J-XX:+UseConcMarkSweepGC -J-XX:+CMSClassUnloadingEnabled -J-Dsun.zip.disableMemoryMapping=true --laf com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel"

+ restart netbeans

Tools | Options 
+ Editor | General
Remove Trailing whitespace - never
+ Editor | Formatting
expand tabs to spaces
tab size is 4


+ Fonts and colors
 - select Consolas 13 

Menu | View | Toolbars | Memory (will show memory usage on netbeans)


#netbeans:add project

Add project | existing sources
path : /home/rjha/code/github/sc
project name: sc
select php 5.3
utf-8 encoding
put netbeans metadata in a separate dir - do not pollute our code dir

#install pear

$sudo aptitude install php-pear

#install phpmd

$sudo pear channel-discover pear.phpmd.org
$sudo pear channel-discover pear.pdepend.org
$sudo pear install  phpmd/PHP_PMD
(do not use --all-deps)
##Add include_path for php5 cli
sudo vim /etc/php5/cli/php.ini
	- include_path = "/var/www/apps:/usr/share/php"

## test a file for mess
$ phpmd web/callback/fb2.php text codesize,design,naming,unusedcode

#install phploc

# YUI compressor
# google closure compiler (closure-tools project and not closure-lib!)
# http://code.google.com/p/closure-compiler/
# closure is good for detecting issues with javascript file.

$ java -jar compiler.jar --js=bundle-full.js   --js_output_file=out.js



#sublime text2


Download the 64 bit version of ST2
start up

#install sublime package control plugin

ST2 | Preferences | Browse Packages 
note down your location
You need to copy the sublime  package control plugin into Installed Packages folder
Download from : http://wbond.net/sublime_packages/package_control/installation
$cp ~/Package\ Control.sublime-package  ~/.config/sublime-text-2/Installed\ Packages/
restart ST2
after restart - You should see ST2 | Preferences | Package control menu item.



# add soda theme
ST2 | preferences | package control
Add packages
search for soda 
install Soda-Theme package


misc
--------
To load your vimrc when doing sudo vim <file>
use $sudo vim -u /home/rjha/.vimrc <file>



gVim
----------

#reload vimrc file

:source ~/.vimrc

#nerdtree
copy deploy/apps/vim/autoload/pathogen.vim to ~/.vim/
cd ~/.vim/bundle
git clone https://github.com/scrooloose/nerdtree.git

 

facebook pfff
----------------


#install ocaml + dependencies - via debian package 

less install.txt 
sudo aptitude install ocaml
#separate package on debian systems
sudo aptitude install ocaml-compiler-libs

sudo aptitude install libpcre3-dev
sudo aptitude install binutils-gold


# install ocaml + dependencies - godi way

The debian package way is fraught with issues. The ocaml version on my m/c
(Debian testing) is 3.1.11 whereas the version used by facebook/pfff is 4.0
(They are using bin-annot in Makefile)

A better way to maintain Ocaml is to use godi package manager that compiles
the latest ocaml from sources. (http://godi.camlcity.org/godi/index.html)
You can install pcre and binutils via debian packages/

The godi install for ocaml is pretty straight forward.



#whatever is latest version
$wget http://download.camlcity.org/download/godi-skylift-20121022.tar.gz

$tar -zxvf godi-skylift-20121022.tar.gz 
$cd godi-skylift-20121022/
$sudo ./bootstrap

# take all default options
# After install add /opt/godi/bin:/opt/godi/sbin to PATH.
$ocaml -version

#get and compile pfff

git clone git://github.com/facebook/pfff.git
cd pfff/

./configure -nogui -novisual --prefix=/home/rjha/sw/pfff
make clean
make depend
make 

#usage
./scheck  ~/code/github/sc/lib/com/indigloo/sc/html/
./pfff -dump_php demos/foo.php

pfff does not have namespace support yet! 
@see https://github.com/facebook/pfff/issues/17


google closure compiler
-------------------------

Download or copy from ~/macbook/common/sw area
google project: http://code.google.com/p/closure-compiler/
To run on our bundle-full js script

$java -jar compiler.jar --js=/home/rjha/code/github/sc/web/js/bundle-full.js    --js_output_file=out.js


